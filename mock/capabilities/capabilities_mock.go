// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubewarden/policy-sdk-go/pkg/capabilities (interfaces: WapcClient)

// Package capabilities is a generated GoMock package.
package capabilities

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWapcClient is a mock of WapcClient interface.
type MockWapcClient struct {
	ctrl     *gomock.Controller
	recorder *MockWapcClientMockRecorder
}

// MockWapcClientMockRecorder is the mock recorder for MockWapcClient.
type MockWapcClientMockRecorder struct {
	mock *MockWapcClient
}

// NewMockWapcClient creates a new mock instance.
func NewMockWapcClient(ctrl *gomock.Controller) *MockWapcClient {
	mock := &MockWapcClient{ctrl: ctrl}
	mock.recorder = &MockWapcClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWapcClient) EXPECT() *MockWapcClientMockRecorder {
	return m.recorder
}

// HostCall mocks base method.
func (m *MockWapcClient) HostCall(arg0, arg1, arg2 string, arg3 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HostCall", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HostCall indicates an expected call of HostCall.
func (mr *MockWapcClientMockRecorder) HostCall(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HostCall", reflect.TypeOf((*MockWapcClient)(nil).HostCall), arg0, arg1, arg2, arg3)
}
